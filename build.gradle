plugins {
	id "java"
	id "org.sonarqube" version "4.4.+"
	id "com.diffplug.spotless" version "6.23.+"
}

defaultTasks 'clean', 'spotlessApply', 'build'

repositories {
	maven {
		url 'https://gds.jfrog.io/artifactory/di-allowed-repos'
	}
}

subprojects {
	apply plugin: 'java'
	java {
		sourceCompatibility = JavaVersion.VERSION_11
		targetCompatibility = JavaVersion.VERSION_11
	}

	repositories {
		maven {
			url 'https://gds.jfrog.io/artifactory/di-allowed-repos'
		}
	}

	// The dynamodb enhanced package loads the apache-client as well as the spi-client, so
	// we need to add the apache-client to the dependencies exclusion to not get a mismatch
	configurations.all {
		exclude group: "software.amazon.awssdk", module: "apache-client"
	}

	dependencies {
		implementation platform("software.amazon.awssdk:bom:2.26.20")
		implementation platform("com.fasterxml.jackson:jackson-bom:2.18.3")

		implementation(libs.dynamodb)
		implementation(libs.dynamodb.enhanced)
		implementation(libs.lambda)
		implementation(libs.aws.lambda.events)
		implementation(libs.cri.common.lib)
		implementation(libs.sqs)
		implementation(libs.kms)

		implementation(libs.bundles.jackson)
		implementation(libs.bundles.powertools)

		implementation(libs.nimbusds.oauth)
		implementation(libs.nimbusds.jwt)

		implementation(libs.hamcrest)

		implementation(libs.junit.engine)

		implementation(libs.system.stubs.core)
		implementation(libs.system.stubs.jupiter)

		implementation(libs.bundles.otel)

		testImplementation(libs.bundles.tests)
		testImplementation(libs.pact.junit5)
		testImplementation(libs.pact.provider)
		testImplementation(libs.lambda.tests)
	}

	tasks.register("pactTests", Test) {
		useJUnitPlatform {
			includeTags 'Pact'
		}
	}
}

sonar {
	properties {
		property "sonar.projectName", "ipv-cri-address-api-java"
		property "sonar.projectKey", "ipv-cri-address-api-java"
		property "sonar.organization", "govuk-one-login"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}

spotless {
	java {
		target "**/src/**/*.java"
		googleJavaFormat("1.13.0").aosp()
		importOrder "", "javax", "java", "\\#"
		endWithNewline()
	}
	groovyGradle {
		target '**/*.gradle'
		greclipse()
		trimTrailingWhitespace()
		endWithNewline()
	}
}

clean.doFirst {
	delete "${rootDir}/dist/"
	delete "${rootDir}/.aws-sam"
}

gradle.projectsEvaluated {
	tasks.withType(JavaCompile) {
		options.compilerArgs << "-Xlint:unchecked"
	}
}
