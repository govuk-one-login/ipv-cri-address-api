services:
  localstack:
    image: localstack/localstack:latest
    container_name: localstack
    hostname: localstack
    environment:
      - DATA_DIR=/tmp/localstack/data
      - HOSTNAME_EXTERNAL=localstack
    networks:
      lambda-local:
        aliases:
          - localstack
    ports:
      - "0.0.0.0:4566:4566"
    volumes:
      - localstack-data:/tmp/localstack
  dynamodb:
    image:  amazon/dynamodb-local
    container_name: local-dynamodb
    hostname: dynamodb
    networks:
      lambda-local:
        aliases:
          - dynamodb
    restart: always
    volumes:
      -  ./local-dynamodb-data:/home/dynamodblocal/data
    ports:
      - 8000:8000
    command: "-jar DynamoDBLocal.jar -sharedDb "

  dynamodb_admin:
    image: aaronshaf/dynamodb-admin
    container_name: app-dynamodb_admin
    networks:
      - lambda-local
    ports:
      - "8001:8001"
    environment:
      - DYNAMO_ENDPOINT=http://dynamodb:8000
    depends_on:
      - dynamodb
    restart: unless-stopped

  dynamodb_session_migrator:
    image: amazon/aws-cli
    container_name: app-dynamodb_session_migrator
    working_dir: /tmp
    command: dynamodb create-table --cli-input-json file://create-session-table.json --endpoint-url http://dynamodb:8000
    networks:
      - lambda-local
    volumes:
      - ./local-dev/:/tmp:rw
    environment:
      - AWS_ACCESS_KEY_ID=unicorn_user
      - AWS_SECRET_ACCESS_KEY=magical_password
      - AWS_DEFAULT_REGION=eu-west-2
    depends_on:
      - dynamodb

  dynamodb_person_identity_migrator:
    image: amazon/aws-cli
    container_name: app-dynamodb_person_identity_migrator
    working_dir: /tmp
    command: dynamodb create-table --cli-input-json file://create-person-identity-table.json --endpoint-url http://dynamodb:8000
    networks:
      - lambda-local
    volumes:
      - ./local-dev/:/tmp:rw
    environment:
      - AWS_ACCESS_KEY_ID=unicorn_user
      - AWS_SECRET_ACCESS_KEY=magical_password
      - AWS_DEFAULT_REGION=eu-west-2
    depends_on:
      - dynamodb

  dynamodb_seeder:
    image: amazon/aws-cli
    container_name: app-dynamodb_seeder
    working_dir: /tmp
    command: dynamodb batch-write-item --request-items file://seed-table.json --endpoint-url http://dynamodb:8000
    networks:
      - lambda-local
    volumes:
      - ./local-dev/:/tmp:rw
    environment:
      - AWS_ACCESS_KEY_ID=unicorn_user
      - AWS_SECRET_ACCESS_KEY=magical_password
      - AWS_DEFAULT_REGION=eu-west-2
    depends_on:
      dynamodb_session_migrator:
        condition: service_completed_successfully
      dynamodb_person_identity_migrator:
        condition: service_completed_successfully
    restart: on-failure

  credential_issuer_config:
    image: amazon/aws-cli
    container_name: credential_issuer_config
    working_dir: /tmp
    command: ssm put-parameter --name "/dev/credentialIssuers/config/stub3" --type "String" --value file://insert-dev-parameter-store-values.json --endpoint-url http://localstack:4566
    networks:
      - lambda-local
    volumes:
      - ./local-dev/:/tmp:rw
    environment:
      - AWS_ACCESS_KEY_ID=unicorn_user
      - AWS_SECRET_ACCESS_KEY=magical_password
      - AWS_DEFAULT_REGION=eu-west-2
    restart: on-failure

volumes:
  app_dynamodb:
    driver: local
  localstack-data:
    name: localstack-data

networks:
  lambda-local:
    name: lambda-local
    external: true