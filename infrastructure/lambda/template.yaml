AWSTemplateFormatVersion: "2010-09-09"
Description: Digital Identity IPV CRI Address API
Transform: AWS::Serverless-2016-10-31 #TODO: Cannot add the LanguageExtensions transform due to a bug in SAM/CF

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, localdev, build, staging, integration, production]
    ConstraintDescription: Must be dev, localdev, build, staging, integration or production
  DeployAlarmsInDevEnvironment:
    Description: "Set to the string value `true` to deploy alarms in a DEV environment"
    Type: String
    Default: false
  LambdaDeploymentPreference:
    Description: "Specifies the configuration to enable gradual Lambda deployments"
    Type: String
    Default: AllAtOnce
  CodeSigningConfigArn:
    Description: "The ARN of the Code Signing Config to use, provided by the deployment pipeline"
    Type: String
    Default: "none"
  PermissionsBoundary:
    Description: "The ARN of the permissions boundary to apply when creating IAM roles"
    Type: String
    Default: "none"
  SecretPrefix:
    Description: Secrets name prefix
    Type: String
    Default: "none"
  AuditEventNamePrefix:
    Description: "The audit event name prefix"
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/common-cri-parameters/AuditEventNamePrefix"
  CriIdentifier:
    Description: "The unique credential issuer identifier"
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/common-cri-parameters/CriIdentifier"
  CommonStackName:
    Description: "The name of the stack containing the common CRI lambdas/infra"
    Type: String
    Default: common-cri-api
  TxmaStackName:
    Description: "The stack containing the TXMA infrastructure"
    Type: String
    Default: txma-infrastructure

Conditions:
  UseSecretPrefix: !Not [!Equals [!Ref SecretPrefix, "none"]]
  UsePermissionsBoundary: !Not [!Equals [!Ref PermissionsBoundary, "none"]]
  UseCodeSigningConfig: !Not [!Equals [!Ref CodeSigningConfigArn, "none"]]
  UseCanaryDeploymentAlarms:
    !Not [!Equals [!Ref LambdaDeploymentPreference, AllAtOnce]]
  IsDevEnvironment:
    !Or [!Equals [!Ref Environment, dev], !Condition IsLocalDevEnvironment]
  IsLocalDevEnvironment: !Equals [!Ref Environment, localdev]
  IsProdEnvironment: !Equals [!Ref Environment, production]
  IsNotProdEnvironment: !Not [!Equals [!Ref Environment, production]]
  IsNotDevEnvironment: !Not [!Condition IsDevEnvironment]
  AddProvisionedConcurrency:
    !Not [
      !Equals [
        !FindInMap [
          EnvironmentConfiguration,
          !Ref Environment,
          provisionedConcurrency,
        ],
        0,
      ],
    ]
  DeployAlarms:
    !Or [
      !Condition IsNotDevEnvironment,
      !Equals [!Ref DeployAlarmsInDevEnvironment, "true"],
    ]

Globals:
  Function:
    VpcConfig:
      SecurityGroupIds: [!ImportValue cri-vpc-LambdaSecurityGroup]
      SubnetIds: !Split [",", !ImportValue cri-vpc-PrivateSubnets]
    PermissionsBoundary:
      !If [UsePermissionsBoundary, !Ref PermissionsBoundary, !Ref AWS::NoValue]
    CodeSigningConfigArn:
      !If [UseCodeSigningConfig, !Ref CodeSigningConfigArn, !Ref AWS::NoValue]
    Tracing: Active
    Timeout: 30 # seconds
    Runtime: java21
    Architectures: [arm64]
    AutoPublishAlias: live
    DeploymentPreference:
      Enabled: true
      Type: !Ref LambdaDeploymentPreference
      Role: !GetAtt CodeDeployServiceRole.Arn
    MemorySize: !FindInMap [MemorySizeMapping, Environment, !Ref Environment]

    Environment:
      Variables:
        AWS_STACK_NAME: !Sub ${AWS::StackName}
        SECRET_PREFIX:
          !If [UseSecretPrefix, !Ref SecretPrefix, !Ref AWS::StackName]
        SQS_AUDIT_EVENT_PREFIX: !Ref AuditEventNamePrefix
        COMMON_PARAMETER_NAME_PREFIX: !Ref CommonStackName
        POWERTOOLS_METRICS_NAMESPACE: !Ref CriIdentifier
        POWERTOOLS_LOG_LEVEL: INFO
        AWS_LAMBDA_EXEC_WRAPPER: /opt/dynatrace
        JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1
        DT_CONNECTION_AUTH_TOKEN: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CONNECTION_AUTH_TOKEN}}"
          - SecretArn:
              !FindInMap [
                EnvironmentConfiguration,
                !Ref Environment,
                dynatraceSecretArn,
              ]
        DT_CONNECTION_BASE_URL: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CONNECTION_BASE_URL}}"
          - SecretArn:
              !FindInMap [
                EnvironmentConfiguration,
                !Ref Environment,
                dynatraceSecretArn,
              ]
        DT_CLUSTER_ID: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CLUSTER_ID}}"
          - SecretArn:
              !FindInMap [
                EnvironmentConfiguration,
                !Ref Environment,
                dynatraceSecretArn,
              ]
        DT_LOG_COLLECTION_AUTH_TOKEN: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_LOG_COLLECTION_AUTH_TOKEN}}"
          - SecretArn:
              !FindInMap [
                EnvironmentConfiguration,
                !Ref Environment,
                dynatraceSecretArn,
              ]
        DT_TENANT: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_TENANT}}"
          - SecretArn:
              !FindInMap [
                EnvironmentConfiguration,
                !Ref Environment,
                dynatraceSecretArn,
              ]
        DT_OPEN_TELEMETRY_ENABLE_INTEGRATION: true
        OTEL_INSTRUMENTATION_AWS_SDK_EXPERIMENTAL_USE_PROPAGATOR_FOR_MESSAGING: "true"
    ProvisionedConcurrencyConfig: !If
      - AddProvisionedConcurrency
      - ProvisionedConcurrentExecutions:
          !FindInMap [
            EnvironmentConfiguration,
            !Ref Environment,
            provisionedConcurrency,
          ]
      - !Ref AWS::NoValue
  Api:
    TracingEnabled: false
    OpenApiVersion: 3.0.1
    MethodSettings:
      - LoggingLevel: INFO
        ResourcePath: /*
        HttpMethod: "*"
        # Disable data trace in production to avoid logging customer sensitive information
        DataTraceEnabled: !If [IsProdEnvironment, false, true]
        MetricsEnabled: true
        ThrottlingRateLimit: 200
        ThrottlingBurstLimit: 400
    AccessLogSetting:
      Format: >-
        {
        "requestId":"$context.requestId",
        "ip":"$context.identity.sourceIp",
        "requestTime":"$context.requestTime",
        "httpMethod":"$context.httpMethod",
        "path":"$context.path",
        "routeKey":"$context.routeKey",
        "status":"$context.status",
        "protocol":"$context.protocol",
        "responseLatency":"$context.responseLatency",
        "responseLength":"$context.responseLength"
        }

Mappings:
  StaticVariables:
    Urls:
      SupportManualURL: "https://team-manual.account.gov.uk/teams/CRI-Orange-team/supporting-cri-orange/address-credential-issuer-runbook"
      OrdnanceSurveyAPIURL: "https://api.os.uk/search/places/v1/postcode"

  StubOrdnanceSurveyAPIURLs:
    Environment:
      localdev: https://dvzu1fes9j.execute-api.eu-west-2.amazonaws.com/dev/search/places/v1/postcode
      dev: https://dvzu1fes9j.execute-api.eu-west-2.amazonaws.com/dev/search/places/v1/postcode
      build: https://b8ysflv2t2.execute-api.eu-west-2.amazonaws.com/build/search/places/v1/postcode
      staging: https://hv21rikq99.execute-api.eu-west-2.amazonaws.com/staging/search/places/v1/postcode
      integration: https://api.os.uk/search/places/v1/postcode

  MemorySizeMapping:
    Environment:
      dev: 2048
      build: 4096
      staging: 2048
      integration: 2048
      production: 4096
      localdev: 2048

  VcContainsUniqueIdMapping:
    Environment:
      dev: true
      build: true
      staging: true
      integration: false
      production: false
      localdev: true

  EnvironmentConfiguration:
    dev:
      provisionedConcurrency: 0
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
    localdev:
      provisionedConcurrency: 0
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
    build:
      provisionedConcurrency: 0
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
    staging:
      provisionedConcurrency: 0
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
    integration:
      provisionedConcurrency: 0
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
    production:
      provisionedConcurrency: 0
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceProductionVariables

  MaxJwtTtlMapping:
    Environment:
      dev: 2
      build: 2
      staging: 6
      integration: 6
      production: 6
      localdev: 2

  # Permitted values: SECONDS,MINUTES,HOURS,DAYS,MONTHS,YEARS
  JwtTtlUnitMapping:
    Environment:
      dev: HOURS
      build: HOURS
      staging: MONTHS
      integration: MONTHS
      production: MONTHS
      localdev: HOURS

Resources:
  PublicAddressApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub ${AWS::StackName}-PublicAddressApi
      Description: Public Address CRI API
      StageName: !Ref Environment
      AccessLogSetting:
        DestinationArn: !GetAtt PublicAddressApiAccessLogGroup.Arn
      DefinitionBody:
        openapi: 3.0.1
        paths: # workaround to get `sam validate` to work
          /never-created:
            options: {}
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: ./public-api.yaml
      EndpointConfiguration:
        Type: REGIONAL

  PrivateAddressApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub ${AWS::StackName}-PrivateAddressApi
      Description: Private Address CRI API
      StageName: !Ref Environment
      AccessLogSetting:
        DestinationArn: !GetAtt PrivateAddressApiAccessLogGroup.Arn
      DefinitionBody:
        openapi: 3.0.1
        paths: # workaround to get `sam validate` to work
          /never-created:
            options: {}
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: ./private-api.yaml
      EndpointConfiguration:
        Type: !If [IsLocalDevEnvironment, REGIONAL, PRIVATE]
      Auth:
        ResourcePolicy:
          CustomStatements:
            #FIXME: Workaround for lack of the LanguageExtensions transform - need at least one policy in the list
            - Effect: Allow
              Resource: execute-api:/*
              Action: execute-api:Invoke
              Principal: "*"
            - !If
              - IsLocalDevEnvironment
              - !Ref AWS::NoValue
              - Effect: Deny
                Resource: execute-api:/*
                Action: execute-api:Invoke
                Principal: "*"
                Condition:
                  StringNotEquals:
                    aws:SourceVpce: !ImportValue cri-vpc-ApiGatewayVpcEndpointId

  PublicAddressApiAccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/apigateway/${AWS::StackName}-${PublicAddressApi}-public-AccessLogs
      RetentionInDays: 30

  PublicAddressApiAccessLogGroupSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevEnvironment
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref PublicAddressApiAccessLogGroup

  PrivateAddressApiAccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/apigateway/${AWS::StackName}-${PrivateAddressApi}-private-AccessLogs
      RetentionInDays: 30

  PrivateAddressApiAccessLogGroupSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevEnvironment
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref PrivateAddressApiAccessLogGroup

  PostcodeLookupFunction:
    Type: AWS::Serverless::Function
    Properties:
      SnapStart:
        ApplyOn: PublishedVersions
      CodeUri: ../../lambdas/postcode-lookup
      Handler: uk.gov.di.ipv.cri.address.api.handler.PostcodeLookupHandler::handleRequest
      DeploymentPreference:
        Alarms: !If
          - UseCanaryDeploymentAlarms
          - [
              !Ref PostcodeLookupFunctionCanaryErrors,
              !Ref PostcodeLookupFunctionCanary5xxErrors,
            ]
          - [!Ref AWS::NoValue]
      Layers:
        - arn:aws:lambda:eu-west-2:216552277552:layer:Dynatrace_OneAgent_1_313_36_20250507-184408_with_collector_java:1
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub "${CriIdentifier}-postcode-lookup"
          SQS_AUDIT_EVENT_QUEUE_URL:
            Fn::ImportValue: !Sub ${TxmaStackName}-AuditEventQueueUrl
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - DynamoDBReadPolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
        - Statement:
            - Sid: ReadSecretsPolicy
              Effect: Allow
              Action:
                - "secretsmanager:*"
              Resource: !Sub
                - "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/${Prefix}/OrdnanceSurveyAPIKey*"
                - Prefix:
                    !If [
                      UseSecretPrefix,
                      !Ref SecretPrefix,
                      !Ref AWS::StackName,
                    ]
            - Sid: ReadParametersPolicy
              Effect: Allow
              Action:
                - ssm:GetParameter
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/OrdnanceSurveyAPIUrl/*"
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParameter
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/SessionTableName"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/SessionTtl"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/verifiable-credential/issuer"
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParametersByPath
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/clients/*"
        - SQSSendMessagePolicy:
            QueueName:
              Fn::ImportValue: !Sub ${TxmaStackName}-AuditEventQueueName
        - Statement:
            - Sid: auditEventQueueKmsEncryptionKeyPermission
              Effect: Allow
              Action:
                - kms:Decrypt
                - kms:GenerateDataKey
              Resource:
                Fn::ImportValue: !Sub ${TxmaStackName}-AuditEventQueueEncryptionKeyArn

  PostcodeLookupFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${PostcodeLookupFunction}"
      RetentionInDays: 30

  PostcodeLookupFunctionLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevEnvironment
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref PostcodeLookupFunctionLogGroup

  AddressFunction:
    Type: AWS::Serverless::Function
    Properties:
      SnapStart:
        ApplyOn: PublishedVersions
      CodeUri: ../../lambdas/address
      Handler: uk.gov.di.ipv.cri.address.api.handler.AddressHandler::handleRequest
      DeploymentPreference:
        Alarms: !If
          - UseCanaryDeploymentAlarms
          - [
              !Ref AddressFunctionCanaryErrors,
              !Ref AddressFunctionCanary5xxErrors,
            ]
          - [!Ref AWS::NoValue]
      Layers:
        - arn:aws:lambda:eu-west-2:216552277552:layer:Dynatrace_OneAgent_1_313_36_20250507-184408_with_collector_java:1
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub "${CriIdentifier}-address"
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - DynamoDBCrudPolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
        - DynamoDBCrudPolicy:
            TableName: !Ref AddressTable
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParameter
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/AddressTableName"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/SessionTableName"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/SessionTtl"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/verifiable-credential/issuer"
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParametersByPath
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/clients/*"

  AddressFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${AddressFunction}"
      RetentionInDays: 30

  AddressFunctionLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevEnvironment
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref AddressFunctionLogGroup

  IssueCredentialFunction:
    Type: AWS::Serverless::Function
    Properties:
      SnapStart:
        ApplyOn: PublishedVersions
      Handler: uk.gov.di.ipv.cri.address.api.handler.IssueCredentialHandler::handleRequest
      DeploymentPreference:
        Alarms: !If
          - UseCanaryDeploymentAlarms
          - [
              !Ref IssueCredentialFunctionCanaryErrors,
              !Ref IssueCredentialFunctionCanary5xxErrors,
            ]
          - [!Ref AWS::NoValue]
      CodeUri: ../../lambdas/issuecredential
      Layers:
        - arn:aws:lambda:eu-west-2:216552277552:layer:Dynatrace_OneAgent_1_313_36_20250507-184408_with_collector_java:1
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub "${CriIdentifier}-issuecredential"
          SQS_AUDIT_EVENT_QUEUE_URL:
            Fn::ImportValue: !Sub ${TxmaStackName}-AuditEventQueueUrl
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - DynamoDBReadPolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
        - DynamoDBReadPolicy:
            TableName: !Ref AddressTable
        - Statement:
            Effect: Allow
            Action:
              - "kms:Sign"
            Resource: !ImportValue core-infrastructure-CriVcSigningKey1Arn
        - SQSSendMessagePolicy:
            QueueName:
              Fn::ImportValue: !Sub ${TxmaStackName}-AuditEventQueueName
        - Statement:
            Effect: Allow
            Action:
              - ssm:GetParameter
            Resource:
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/AddressTableName"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/MaxJwtTtl"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/JwtTtlUnit"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/verifiableCredentialKmsSigningKeyId"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/SessionTableName"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/verifiable-credential/issuer"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/release-flags/vc-expiry-removed"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/release-flags/vc-contains-unique-id"
        - Statement:
            Effect: Allow
            Action:
              - kms:Decrypt
              - kms:GenerateDataKey
            Resource:
              Fn::ImportValue: !Sub ${TxmaStackName}-AuditEventQueueEncryptionKeyArn
  IssueCredentialFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${IssueCredentialFunction}"
      RetentionInDays: 30

  IssueCredentialFunctionLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevEnvironment
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref IssueCredentialFunctionLogGroup

  GetAddressesFunction:
    Type: AWS::Serverless::Function
    Properties:
      ProvisionedConcurrencyConfig:
        ProvisionedConcurrentExecutions: 1
      Handler: get-addresses-handler.lambdaHandler
      DeploymentPreference:
        Alarms: !If
          - UseCanaryDeploymentAlarms
          - [
              !Ref GetAddressesFunctionCanaryErrors,
              !Ref GetAddressesFunctionCanary5xxErrors,
            ]
          - [!Ref AWS::NoValue]
      CodeUri: ../../lambdas/get-addresses/
      Runtime: nodejs22.x
      Layers:
        - arn:aws:lambda:eu-west-2:216552277552:layer:Dynatrace_OneAgent_1_313_2_20250404-043044_with_collector_nodejs:1
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub "${CriIdentifier}-get-addresses"
          ADDRESS_LOOKUP_TABLE_NAME: !Sub "{{resolve:ssm:/${CommonStackName}/PersonIdentityTableName}}"
          SESSION_TABLE_NAME: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - DynamoDBReadPolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/PersonIdentityTableName}}"
        - DynamoDBReadPolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true # Enabling source maps will create the required NODE_OPTIONS environment variables on your lambda function during sam build
        EntryPoints:
          - src/get-addresses-handler.ts
        External:
          - "@aws-sdk/*"

  GetAddressesFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${GetAddressesFunction}"
      RetentionInDays: 30

  GetAddressesFunctionLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevEnvironment
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref GetAddressesFunctionLogGroup

  AddressTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName: !Sub "address-${AWS::StackName}"
      BillingMode: "PAY_PER_REQUEST"
      AttributeDefinitions:
        - AttributeName: "sessionId"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "sessionId"
          KeyType: "HASH"
      TimeToLiveSpecification:
        AttributeName: expiryDate
        Enabled: true

  PublicAddressApiUsagePlan:
    Type: AWS::ApiGateway::UsagePlan
    Condition: IsNotDevEnvironment
    Properties:
      ApiStages:
        - ApiId: !Ref PublicAddressApi
          Stage: !Ref PublicAddressApi.Stage
      Quota:
        Limit: 500000
        Period: DAY
      Throttle:
        BurstLimit: 200 # requests the API can handle concurrently
        RateLimit: 400 # allowed requests per second

  PrivateAddressApiUsagePlan:
    Type: AWS::ApiGateway::UsagePlan
    Condition: IsNotDevEnvironment
    Properties:
      ApiStages:
        - ApiId: !Ref PrivateAddressApi
          Stage: !Ref PrivateAddressApi.Stage
      Quota:
        Limit: 500000
        Period: DAY
      Throttle:
        BurstLimit: 200 # requests the API can handle concurrently
        RateLimit: 400 # allowed requests per second

  LinkUsagePlanApiKey1:
    Type: AWS::ApiGateway::UsagePlanKey
    Condition: IsNotDevEnvironment
    Properties:
      KeyId: !ImportValue core-infrastructure-ApiKey1
      KeyType: API_KEY
      UsagePlanId: !Ref PublicAddressApiUsagePlan

  LinkUsagePlanApiKey2:
    Type: AWS::ApiGateway::UsagePlanKey
    Condition: IsNotDevEnvironment
    Properties:
      KeyId: !ImportValue core-infrastructure-ApiKey2
      KeyType: API_KEY
      UsagePlanId: !Ref PublicAddressApiUsagePlan

  ParameterAddressItemTableName:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/AddressTableName"
      Value: !Sub address-${AWS::StackName}
      Type: String
      Description: address item dynamodb table name

  MaxJwtTtlParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/MaxJwtTtl"
      Type: String
      Value: !FindInMap [MaxJwtTtlMapping, Environment, !Ref Environment]
      Description: default time to live for an JWT in (seconds)

  JwtTtlUnitParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/JwtTtlUnit"
      Type: String
      Value: !FindInMap [JwtTtlUnitMapping, Environment, !Ref Environment]
      Description: The unit for the time-to-live for an JWT e.g. (MONTHS)

  ReleaseFlagsVcContainsUniqueIdParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/release-flags/vc-contains-unique-id"
      Type: String
      Value:
        !FindInMap [VcContainsUniqueIdMapping, Environment, !Ref Environment]
      Description: Verifiable Credential Contains UniqueId Mapping

  ProdIpvCoreOrdnanceSurveyAPIURL:
    Condition: IsProdEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/OrdnanceSurveyAPIUrl/ipv-core"
      Type: String
      Value: !FindInMap [StaticVariables, Urls, OrdnanceSurveyAPIURL]

  ProdIpvCoreStubPreProdOrdnanceSurveyAPIURL:
    Condition: IsProdEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/OrdnanceSurveyAPIUrl/ipv-core-stub-pre-prod"
      Type: String
      Value: !FindInMap [StaticVariables, Urls, OrdnanceSurveyAPIURL]

  ProdIpvCoreStubPreProdAwsBuildOrdnanceSurveyAPIURL:
    Condition: IsProdEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/OrdnanceSurveyAPIUrl/ipv-core-stub-pre-prod-aws-build"
      Type: String
      Value: !FindInMap [StaticVariables, Urls, OrdnanceSurveyAPIURL]

  IpvCoreStubAwsProdOrdnanceSurveyAPIURL:
    Condition: IsNotProdEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/OrdnanceSurveyAPIUrl/ipv-core-stub-aws-prod"
      Type: String
      Value: !FindInMap [ StubOrdnanceSurveyAPIURLs, Environment, !Ref Environment ]

  IpvCoreStubAwsBuildOrdnanceSurveyAPIURL:
    Condition: IsNotProdEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/OrdnanceSurveyAPIUrl/ipv-core-stub-aws-build"
      Type: String
      Value: !FindInMap [ StubOrdnanceSurveyAPIURLs, Environment, !Ref Environment ]

  IpvCoreStubOrdnanceSurveyAPIURL:
    Condition: IsNotProdEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/OrdnanceSurveyAPIUrl/ipv-core-stub"
      Type: String
      Value: !FindInMap [ StubOrdnanceSurveyAPIURLs, Environment, !Ref Environment ]

  IpvCoreStubPreProdAwsBuildOrdnanceSurveyAPIURL:
    Condition: IsNotProdEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/OrdnanceSurveyAPIUrl/ipv-core-stub-pre-prod-aws-build"
      Type: String
      Value: !FindInMap [StaticVariables, Urls, OrdnanceSurveyAPIURL]

  IpvCoreStubPreProdOrdnanceSurveyAPIURL:
    Condition: IsNotProdEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/OrdnanceSurveyAPIUrl/ipv-core-stub-pre-prod"
      Type: String
      Value: !FindInMap [StaticVariables, Urls, OrdnanceSurveyAPIURL]

  IpvCoreStubAwsHeadlessOrdnanceSurveyAPIURL:
    Condition: IsNotProdEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/OrdnanceSurveyAPIUrl/ipv-core-stub-aws-headless"
      Type: String
      Value: !FindInMap [ StubOrdnanceSurveyAPIURLs, Environment, !Ref Environment ]

  IpvCoreStubAwsProd3rdpartyOrdnanceSurveyAPIURL:
    Condition: IsNotProdEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/OrdnanceSurveyAPIUrl/ipv-core-stub-aws-prod_3rdparty"
      Type: String
      Value: !FindInMap [StaticVariables, Urls, OrdnanceSurveyAPIURL]

  IpvCoreStubAwsBuild3rdpartyOrdnanceSurveyAPIURL:
    Condition: IsNotProdEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/OrdnanceSurveyAPIUrl/ipv-core-stub-aws-build_3rdparty"
      Type: String
      Value: !FindInMap [StaticVariables, Urls, OrdnanceSurveyAPIURL]

  IpvCoreOrdnanceSurveyAPIURL:
    Condition: IsNotProdEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/OrdnanceSurveyAPIUrl/ipv-core"
      Type: String
      Value: !FindInMap [ StubOrdnanceSurveyAPIURLs, Environment, !Ref Environment ]

  IpvCore3rdPartyStubsOrdnanceSurveyAPIURL:
    Condition: IsNotProdEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/OrdnanceSurveyAPIUrl/ipv-core-3rd-party-stubs"
      Type: String
      Value: !FindInMap [StaticVariables, Urls, OrdnanceSurveyAPIURL]

  PostcodeLookupFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref PostcodeLookupFunction.Alias
      Principal: apigateway.amazonaws.com

  AddressFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref AddressFunction.Alias
      Principal: apigateway.amazonaws.com

  IssueCredentialFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref IssueCredentialFunction.Alias
      Principal: apigateway.amazonaws.com

  GetAddressesFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref GetAddressesFunction.Alias
      Principal: apigateway.amazonaws.com

  AddressLambdaErrors:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: !Sub
        - "Address ${Environment} lambda errors. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue core-infrastructure-AlarmTopic
        - !ImportValue platform-alarm-critical-alert-topic
      OKActions:
        - !ImportValue core-infrastructure-AlarmTopic
        - !ImportValue platform-alarm-critical-alert-topic
      InsufficientDataActions: []
      MetricName: Errors
      Namespace: AWS/Lambda
      Statistic: Sum
      Dimensions: []
      Period: 300
      DatapointsToAlarm: 3
      EvaluationPeriods: 3
      Threshold: 1
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching

  SessionLambdaFailedToVerifyJWTWarningAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub ${AWS::StackName}-${Environment}-SessionLambdaFailedToVerifyJWTWarningAlarm
      AlarmDescription: !Sub
        - "Errors verifying JWTs (jwt_verification_failed) rate exceeds 10% of Session Lambda invocations consecutively for 3, 5 minute periods. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      ComparisonOperator: GreaterThanThreshold
      Threshold: 10
      DatapointsToAlarm: 3
      EvaluationPeriods: 3
      TreatMissingData: notBreaching
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      Metrics:
        - Id: errors
          Expression: IF(m2 != 0, (m1 / m2) * 100, 0)
          Label: JWTErrorRate
          ReturnData: true
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: !Sub "${CriIdentifier}"
              MetricName: jwt_verification_failed
              Dimensions:
                - Name: service
                  Value: !Sub "${CriIdentifier}-sessionTS"
            Period: 300
            Stat: Sum
        - Id: m2
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${CommonStackName}-SessionFunctionTS
            Period: 300
            Stat: Sum

  SessionLambdaFailedToVerifyJWTCriticalAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub ${AWS::StackName}-${Environment}-SessionLambdaFailedToVerifyJWTCriticalAlarm
      AlarmDescription: !Sub
        - "Errors verifying JWTs (jwt_verification_failed) rate exceeds 80% of Session Lambda invocations consecutively for 3, 5 minute periods. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      ComparisonOperator: GreaterThanThreshold
      Threshold: 80
      DatapointsToAlarm: 3
      EvaluationPeriods: 3
      TreatMissingData: notBreaching
      AlarmActions:
        - !ImportValue core-infrastructure-AlarmTopic
        - !ImportValue platform-alarm-critical-alert-topic
      OKActions:
        - !ImportValue core-infrastructure-AlarmTopic
        - !ImportValue platform-alarm-critical-alert-topic
      Metrics:
        - Id: errors
          Expression: IF(m2 != 0, (m1 / m2) * 100, 0)
          Label: JWTErrorRate
          ReturnData: true
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: !Sub "${CriIdentifier}"
              MetricName: jwt_verification_failed
              Dimensions:
                - Name: service
                  Value: !Sub "${CriIdentifier}-sessionTS"
            Period: 300
            Stat: Sum
        - Id: m2
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${CommonStackName}-SessionFunctionTS
            Period: 300
            Stat: Sum

  TokenLambdaFailedToVerifyJWTWarningAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub ${AWS::StackName}-${Environment}-TokenLambdaFailedToVerifyJWTWarningAlarm
      AlarmDescription: !Sub
        - "Errors verifying JWTs in Experian KBV (jwt_verification_failed) rate exceeds 10% of Token Lambda invocations consecutively for 3, 5 minute periods. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      ComparisonOperator: GreaterThanThreshold
      Threshold: 10
      DatapointsToAlarm: 3
      EvaluationPeriods: 3
      TreatMissingData: notBreaching
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      Metrics:
        - Id: errors
          Expression: IF(m2 != 0, (m1 / m2) * 100, 0)
          Label: JWTErrorRate
          ReturnData: true
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: !Sub "${CriIdentifier}"
              MetricName: jwt_verification_failed
              Dimensions:
                - Name: service
                  Value: !Sub "${CriIdentifier}-access-token-2"
            Period: 300
            Stat: Sum
        - Id: m2
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${CommonStackName}-AccessTokenFunctionTS
            Period: 300
            Stat: Sum

  TokenLambdaFailedToVerifyJWTCriticalAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub ${AWS::StackName}-${Environment}-TokenLambdaFailedToVerifyJWTCriticalAlarm
      AlarmDescription: !Sub
        - "Errors verifying JWTs (jwt_verification_failed) rate exceeds 80% of Token Lambda invocations consecutively for 3, 5 minute periods. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      ComparisonOperator: GreaterThanThreshold
      Threshold: 80
      DatapointsToAlarm: 3
      EvaluationPeriods: 3
      TreatMissingData: notBreaching
      AlarmActions:
        - !ImportValue core-infrastructure-AlarmTopic
        - !ImportValue platform-alarm-critical-alert-topic
      OKActions:
        - !ImportValue core-infrastructure-AlarmTopic
        - !ImportValue platform-alarm-critical-alert-topic
      Metrics:
        - Id: errors
          Expression: IF(m2 != 0, (m1 / m2) * 100, 0)
          Label: JWTErrorRate
          ReturnData: true
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: !Sub "${CriIdentifier}"
              MetricName: jwt_verification_failed
              Dimensions:
                - Name: service
                  Value: !Sub "${CriIdentifier}-access-token-2"
            Period: 300
            Stat: Sum
        - Id: m2
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${CommonStackName}-AccessTokenFunctionTS
            Period: 300
            Stat: Sum

  SessionLambdaNoMatchingEncryptionKeyAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${AWS::StackName}-${Environment}-SessionLambdaNoMatchingEncryptionKeyAlarm"
      AlarmDescription: !Sub
        - "Failed to find a key alias to decrypt a given JWT payload. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue core-infrastructure-AlarmTopic
        - !ImportValue platform-alarm-critical-alert-topic
      OKActions:
        - !ImportValue core-infrastructure-AlarmTopic
        - !ImportValue platform-alarm-critical-alert-topic
      InsufficientDataActions: []
      MetricName: all_aliases_unavailable_for_decryption
      Namespace: !Sub "${CriIdentifier}"
      Statistic: Sum
      Dimensions:
        - Name: service
          Value: !Sub "${CriIdentifier}-sessionTS"
      Period: 300
      DatapointsToAlarm: 3
      EvaluationPeriods: 3
      Threshold: 1
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching

  AddressAPIGW5XXErrors:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: !Sub 
        - "Address ${Environment} API Gateway 5XX errors. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue core-infrastructure-AlarmTopic
        - !ImportValue platform-alarm-critical-alert-topic
      OKActions:
        - !ImportValue core-infrastructure-AlarmTopic
        - !ImportValue platform-alarm-critical-alert-topic
      InsufficientDataActions: []
      DatapointsToAlarm: 3
      EvaluationPeriods: 3
      Threshold: 1
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: e1
          Label: Expression1
          ReturnData: true
          Expression: SUM(METRICS())
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub "${AWS::StackName}-PublicAddressApi"
            Period: 300
            Stat: Sum
        - Id: m2
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub "${AWS::StackName}-PrivateAddressApi"
            Period: 300
            Stat: Sum

  PostcodeLookupFunctionCanaryErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmDescription: !Sub "Errors returned from the PostcodeLookupFunction Lambda."
      MetricName: Errors
      Dimensions:
        - Name: Resource
          Value: !Sub "${AWS::StackName}-PostcodeLookupFunction:live"
        - Name: FunctionName
          Value: !Ref PostcodeLookupFunction
        - Name: ExecutedVersion
          Value: !GetAtt PostcodeLookupFunction.Version.Version
      Namespace: AWS/Lambda
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  PostcodeLookupFunctionCanary5xxErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmDescription: !Sub "PostcodeLookupFunction Lambda returning 5xx response."
      Namespace: AWS/ApiGateway
      MetricName: 5XXError
      Dimensions:
        - Name: ApiName
          Value: !Sub "${AWS::StackName}-PrivateAddressApi"
        - Name: Method
          Value: GET
        - Name: Stage
          Value: !Ref Environment
        - Name: Resource
          Value: /postcode-lookup/{postcode}
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  AddressFunctionCanaryErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmDescription: !Sub "Errors returned from the AddressFunction Lambda."
      MetricName: Errors
      Dimensions:
        - Name: Resource
          Value: !Sub "${AWS::StackName}-AddressFunction:live"
        - Name: FunctionName
          Value: !Ref AddressFunction
        - Name: ExecutedVersion
          Value: !GetAtt AddressFunction.Version.Version
      Namespace: AWS/Lambda
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  AddressFunctionCanary5xxErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmDescription: !Sub "AddressFunction Lambda returning 5xx response."
      Namespace: AWS/ApiGateway
      MetricName: 5XXError
      Dimensions:
        - Name: ApiName
          Value: !Sub "${AWS::StackName}-PrivateAddressApi"
        - Name: Method
          Value: PUT
        - Name: Stage
          Value: !Ref Environment
        - Name: Resource
          Value: /address
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  GetAddressesFunctionCanaryErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmDescription: !Sub "Errors returned from the GetAddressesFunction Lambda."
      MetricName: Errors
      Dimensions:
        - Name: Resource
          Value: !Sub "${AWS::StackName}-GetAddressesFunction:live"
        - Name: FunctionName
          Value: !Ref GetAddressesFunction
        - Name: ExecutedVersion
          Value: !GetAtt GetAddressesFunction.Version.Version
      Namespace: AWS/Lambda
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  GetAddressesFunctionCanary5xxErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmDescription: !Sub "GetAddressesFunction Lambda returning 5xx response."
      Namespace: AWS/ApiGateway
      MetricName: 5XXError
      Dimensions:
        - Name: ApiName
          Value: !Sub "${AWS::StackName}-PrivateAddressApi"
        - Name: Method
          Value: GET
        - Name: Stage
          Value: !Ref Environment
        - Name: Resource
          Value: /addresses
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  IssueCredentialFunctionCanaryErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmDescription: !Sub "Errors returned from the IssueCredentialFunction Lambda."
      MetricName: Errors
      Dimensions:
        - Name: Resource
          Value: !Sub "${AWS::StackName}-IssueCredentialFunction:live"
        - Name: FunctionName
          Value: !Ref IssueCredentialFunction
        - Name: ExecutedVersion
          Value: !GetAtt IssueCredentialFunction.Version.Version
      Namespace: AWS/Lambda
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  IssueCredentialFunctionCanary5xxErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmDescription: !Sub "IssueCredential Lambda returning 5xx response."
      Namespace: AWS/ApiGateway
      MetricName: 5XXError
      Dimensions:
        - Name: ApiName
          Value: !Sub "${AWS::StackName}-PublicAddressApi"
        - Name: Method
          Value: POST
        - Name: Stage
          Value: !Ref Environment
        - Name: Resource
          Value: /credential/issue
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  CodeDeployServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - codedeploy.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRoleForLambda
      PermissionsBoundary:
        !If [
          UsePermissionsBoundary,
          !Ref PermissionsBoundary,
          !Ref AWS::NoValue,
        ]

  JWKSBucketRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: 2012-10-17
      Policies:
        - PolicyName: AccessJWKSJson
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:Get*"
                Resource: !Sub
                  - "arn:aws:s3:::govuk-one-login-address-published-keys-${env}/jwks.json"
                  - env: !If [IsLocalDevEnvironment, "dev", !Ref Environment]
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      Tags:
        - Key: "key_consumer_type"
          Value: "use"

  JsonWebKeys5XXApiGwErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-${Environment}-JsonWebKeys5XXApiGwErrorAlarm"
      AlarmDescription: !Sub
        - "${AWS::StackName}-PublicAddressApi - There has been a small proportion of 5XX errors on the JsonWebKeys endpoint. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      InsufficientDataActions: []
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<4 || error<2,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub "${PublicAddressApi} - Address Credential Issuer Public API"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /.well-known/jwks.json
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub "${PublicAddressApi} - Address Credential Issuer Public API"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /.well-known/jwks.json
            Period: 60
            Stat: Sum

  JsonWebKeys5XXApiGwErrorCriticalAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-JsonWebKeys5XXApiGwErrorCriticalAlarm"
      AlarmDescription: !Sub
        - "${AWS::StackName}-PublicAddressApi - There has been a significant proportion of 5XX errors on the JsonWebKeys endpoint. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      ActionsEnabled: true
      OKActions:
        - !ImportValue core-infrastructure-AlarmTopic
        - !ImportValue platform-alarm-critical-alert-topic
      AlarmActions:
        - !ImportValue core-infrastructure-AlarmTopic
        - !ImportValue platform-alarm-critical-alert-topic
      InsufficientDataActions: []
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 80
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<10,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub "${PublicAddressApi} - Address Credential Issuer Public API"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /.well-known/jwks.json
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub "${PublicAddressApi} - Address Credential Issuer Public API"
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /.well-known/jwks.json
            Period: 60
            Stat: Sum

  JsonWebKeys4XXApiGwErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-JsonWebKeys4XXApiGwErrorAlarm"
      AlarmDescription: !Sub
        - "${AWS::StackName}-PublicAddressApi - There has been a small proportion of 4XX errors on the JsonWebKeys endpoint. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      InsufficientDataActions: []
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 10
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<3 || error<2,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: ApiName
                  Value: !Sub "${PublicAddressApi} - Address Credential Issuer Public API"
                - Name: Resource
                  Value: /.well-known/jwks.json
                - Name: Stage
                  Value: !Ref Environment
                - Name: Method
                  Value: GET
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub "${PublicAddressApi} - Address Credential Issuer Public API"
                - Name: Resource
                  Value: /.well-known/jwks.json
                - Name: Stage
                  Value: !Ref Environment
                - Name: Method
                  Value: GET
            Period: 60
            Stat: Sum

Outputs:
  AddressApiGatewayId:
    Description: "API GatewayID of the Address CRI API"
    Value: !Sub "${PublicAddressApi}"
    Export:
      Name: !Sub ${AWS::StackName}-AddressApiGatewayId

  PublicAddressApiGatewayId:
    Description: "API GatewayID of the public Address CRI API"
    Value: !Sub "${PublicAddressApi}"
    Export:
      Name: !Sub ${AWS::StackName}-PublicAddressApiGatewayId

  PrivateAddressApiGatewayId:
    Description: "API GatewayID of the private Address CRI API"
    Value: !Ref PrivateAddressApi
    Export:
      Name: !Sub ${AWS::StackName}-PrivateAddressApiGatewayId
